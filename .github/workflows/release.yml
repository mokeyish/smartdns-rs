# .github/workflows/release.yml
name: Release

on:
  release:
    types: [created]

jobs:
  release:
    name: release ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            archive: zip
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            archive: zip
          - target: x86_64-apple-darwin
            os: macos-latest
            archive: zip
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
          # - target: arch64-unknown-linux-musl
          #   archive: tar.gz tar.xz tar.zst
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
          - target: arm-unknown-linux-musleabi
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
          # - target: mips-unknown-linux-musl
          #   archive: tar.gz tar.xz tar.zst
          # - target: mips-unknown-linux-musl
          #   archive: tar.gz tar.xz tar.zst
          # - target: mips64-unknown-linux-muslabi64
          #   archive: tar.gz tar.xz tar.zst
          - target: aarch64-linux-android
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
          # - target: x86_64-unknown-freebsd
          #   os: ubuntu-latest
          #   archive: tar.gz tar.xz tar.zst
          - target: x86_64-unknown-netbsd
            os: ubuntu-latest
            archive: tar.gz tar.xz tar.zst
          # - target: wasm32-unknown-emscripten
          #   archive: tar.gz tar.xz tar.zst
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install Rust Toolchain Components
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1.0.3
        with:
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Publish Archive
        uses: softprops/action-gh-release@v0.1.5
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: false
          files: |
            LICENSE
            README*.md
            target/${{ matrix.target }}/release/smartdns
            target/${{ matrix.target }}/release/smartdns.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
